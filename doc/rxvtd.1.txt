NAME
    urxvtd - urxvt terminal daemon

SYNOPSIS
    urxvtd [-q|--quiet] [-o|--opendisplay] [-f|--fork]

DESCRIPTION
    This manpage describes the urxvtd daemon, which is the same vt102
    terminal emulator as urxvt, but runs as a daemon that can open multiple
    terminal windows within the same process.

    You can run it from your X startup scripts, for example, although it is
    not dependent on a working DISPLAY and, in fact, can open windows on
    multiple X displays on the same time.

    Advantages of running a urxvt daemon include faster creation time for
    terminal windows and a lot of saved memory.

    The disadvantage is a possible impact on stability - if the main program
    crashes, all processes in the terminal windows are terminated. For
    example, as there is no way to cleanly react to abnormal connection
    closes, "xkill" and server resets/restarts will kill the urxvtd instance
    including all windows it has opened.

OPTIONS
    urxvtd currently understands a few options only. Bundling of options is
    not yet supported.

    -q, --quiet
        Normally, urxvtd outputs the message "rxvt-unicode daemon listening
        on <path>" after binding to its control socket. This option will
        suppress this message (errors and warnings will still be logged).

    -o, --opendisplay
        This forces urxvtd to open a connection to the current $DISPLAY and
        keep it open.

        This is useful if you want to bind an instance of urxvtd to the
        lifetime of a specific display/server. If the server does a reset,
        urxvtd will be killed automatically.

    -f, --fork
        This makes urxvtd fork after it has bound itself to its control
        socket.

EXAMPLES
    This is a useful invocation of urxvtd in a .xsession-style script:

       B<urxvtd> -q -f -o

    This waits till the control socket is available, opens the current
    display and forks into the background. When you log-out, the server is
    reset and urxvtd is killed.

ENVIRONMENT
    RXVT_SOCKET
        Both urxvtc and urxvtd use the environment variable RXVT_SOCKET to
        create a listening socket and to contact the urxvtd, respectively.
        If the variable is missing, $HOME/.rxvt-unicode-*<nodename>* is
        used. The variable must specify the absolute path of the socket to
        create.

    DISPLAY
        Only used when the "--opendisplay" option is specified. Must contain
        a valid X display name.

SEE ALSO
    urxvt(7), urxvtc(1)

POD ERRORS
    Hey! The above document had some coding errors, which are explained
    below:

    Around line 87:
        You forgot a '=back' before '=head1'

        You forgot a '=back' before '=head1'

