.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "@@RXVT_NAME@@ 1"
.TH @@RXVT_NAME@@ 1 "2014-12-31" "@@RXVT_VERSION@@" "RXVT-UNICODE"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
rxvt\-unicode (ouR XVT, unicode) \- (a VT102 emulator for the X window system)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fB@@RXVT_NAME@@\fR [options] [\-e command [ args ]]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBrxvt-unicode\fR, version \fB@@RXVT_VERSION@@\fR, is a colour vt102 terminal
emulator intended as an \fIxterm\fR(1) replacement for users who do not
require features such as Tektronix 4014 emulation and toolkit-style
configurability. As a result, \fBrxvt-unicode\fR uses much less swap space \*(--
a significant advantage on a machine serving many X sessions.
.PP
This document is also available on the World-Wide-Web at
<http://pod.tst.eu/http://cvs.schmorp.de/rxvt\-unicode/doc/rxvt.1.pod>.
.SH "FREQUENTLY ASKED QUESTIONS"
.IX Header "FREQUENTLY ASKED QUESTIONS"
See @@RXVT_NAME@@(7) (try \f(CW\*(C`man 7 @@RXVT_NAME@@\*(C'\fR) for a list of
frequently asked questions and answer to them and some common
problems. That document is also accessible on the World-Wide-Web at
<http://pod.tst.eu/http://cvs.schmorp.de/rxvt\-unicode/doc/rxvt.7.pod>.
.SH "RXVT-UNICODE VS. RXVT"
.IX Header "RXVT-UNICODE VS. RXVT"
Unlike the original rxvt, \fBrxvt-unicode\fR stores all text in Unicode
internally. That means it can store and display most scripts in the
world. Being a terminal emulator, however, some things are very difficult,
especially cursive scripts such as arabic, vertically written scripts
like mongolian or scripts requiring extremely complex combining rules,
like tibetan or devanagari. Don't expect pretty output when using these
scripts. Most other scripts, latin, cyrillic, kanji, thai etc. should work
fine, though. A somewhat difficult case are right-to-left scripts, such
as hebrew: \fBrxvt-unicode\fR adopts the view that bidirectional algorithms
belong in the application, not the terminal emulator (too many things \*(--
such as cursor-movement while editing \*(-- break otherwise), but that might
change.
.PP
If you are looking for a terminal that supports more exotic scripts, let
me recommend \f(CW\*(C`mlterm\*(C'\fR, which is a very user friendly, lean and clean
terminal emulator. In fact, the reason rxvt-unicode was born was solely
because the author couldn't get \f(CW\*(C`mlterm\*(C'\fR to use one font for latin1 and
another for japanese.
.PP
Therefore another design rationale was the use of multiple fonts to
display characters: The idea of a single unicode font which many other
programs force onto its users never made sense to me: You should be able
to choose any font for any script freely.
.PP
Apart from that, rxvt-unicode is also much better internationalised than
its predecessor, supports things such as \s-1XFT\s0 and \s-1ISO 14755\s0 that are handy
in i18n\-environments, is faster, and has a lot bugs less than the original
rxvt. This all in addition to dozens of other small improvements.
.PP
It is still faithfully following the original rxvt idea of being lean
and nice on resources: for example, you can still configure rxvt-unicode
without most of its features to get a lean binary. It also comes with
a client/daemon pair that lets you open any number of terminal windows
from within a single process, which makes startup time very fast and
drastically reduces memory usage. See @@RXVT_NAME@@d(1) (daemon) and
@@RXVT_NAME@@c(1) (client).
.PP
It also makes technical information about escape sequences (which have
been extended) more accessible: see @@RXVT_NAME@@(7) for technical
reference documentation (escape sequences etc.).
.SH "OPTIONS"
.IX Header "OPTIONS"
The \fB@@RXVT_NAME@@\fR options (mostly a subset of \fIxterm\fR's) are listed
below. In keeping with the smaller-is-better philosophy, options may be
eliminated or default values chosen at compile-time, so options and
defaults listed may not accurately reflect the version installed on
your system. `@@RXVT_NAME@@ \-h' gives a list of major compile-time options on
the \fIOptions\fR line. Option descriptions may be prefixed with which
compile option each is dependent upon. e.g. `Compile \fI\s-1XIM\s0\fR:' requires
\&\fI\s-1XIM\s0\fR on the \fIOptions\fR line. Note: `@@RXVT_NAME@@ \-help' gives a list of all
command-line options compiled into your version.
.PP
Note that \fB@@RXVT_NAME@@\fR permits the resource name to be used as a
long-option (\-\-/++ option) so the potential command-line options are
far greater than those listed. For example: `@@RXVT_NAME@@ \-\-loginShell \-\-color1
Orange'.
.PP
The following options are available:
.IP "\fB\-help\fR, \fB\-\-help\fR" 4
.IX Item "-help, --help"
Print out a message describing available options.
.IP "\fB\-display\fR \fIdisplayname\fR" 4
.IX Item "-display displayname"
Attempt to open a window on the named X display (the older form \fB\-d\fR
is still respected. but deprecated). In the absence of this option, the
display specified by the \fB\s-1DISPLAY\s0\fR environment variable is used.
.IP "\fB\-depth\fR \fIbitdepth\fR" 4
.IX Item "-depth bitdepth"
Compile \fIfrills\fR: Attempt to find a visual with the given bit depth;
resource \fBdepth\fR.
.Sp
[Please note that many X servers (and libXft) are buggy with
respect to \f(CW\*(C`\-depth 32\*(C'\fR and/or alpha channels, and will cause all sorts
of graphical corruption. This is harmless, but we can't do anything about
this, so watch out]
.IP "\fB\-visual\fR \fIvisualID\fR" 4
.IX Item "-visual visualID"
Compile \fIfrills\fR: Use the given visual (see e.g. \f(CW\*(C`xdpyinfo\*(C'\fR for
possible visual ids) instead of the default, and also allocate a private
colormap. All visual types except for DirectColor are supported.
.IP "\fB\-geometry\fR \fIgeom\fR" 4
.IX Item "-geometry geom"
Window geometry (\fB\-g\fR still respected); resource \fBgeometry\fR.
.IP "\fB\-rv\fR|\fB+rv\fR" 4
.IX Item "-rv|+rv"
Turn on/off simulated reverse video; resource \fBreverseVideo\fR.
.IP "\fB\-j\fR|\fB+j\fR" 4
.IX Item "-j|+j"
Turn on/off jump scrolling (allow multiple lines per refresh); resource \fBjumpScroll\fR.
.IP "\fB\-ss\fR|\fB+ss\fR" 4
.IX Item "-ss|+ss"
Turn on/off skip scrolling (allow multiple screens per refresh); resource \fBskipScroll\fR.
.IP "\fB\-fade\fR \fInumber\fR" 4
.IX Item "-fade number"
Fade the text by the given percentage when focus is lost. Small values
fade a little only, 100 completely replaces all colours by the fade
colour; resource \fBfading\fR.
.IP "\fB\-fadecolor\fR \fIcolour\fR" 4
.IX Item "-fadecolor colour"
Fade to this colour when fading is used (see \fB\-fade\fR). The default colour
is opaque black. resource \fBfadeColor\fR.
.IP "\fB\-icon\fR \fIfile\fR" 4
.IX Item "-icon file"
Compile \fIpixbuf\fR: Use the specified image as application icon. This
is used by many window managers, taskbars and pagers to represent the
application window; resource \fIiconFile\fR.
.IP "\fB\-bg\fR \fIcolour\fR" 4
.IX Item "-bg colour"
Window background colour; resource \fBbackground\fR.
.IP "\fB\-fg\fR \fIcolour\fR" 4
.IX Item "-fg colour"
Window foreground colour; resource \fBforeground\fR.
.IP "\fB\-cr\fR \fIcolour\fR" 4
.IX Item "-cr colour"
The cursor colour; resource \fBcursorColor\fR.
.IP "\fB\-pr\fR \fIcolour\fR" 4
.IX Item "-pr colour"
The mouse pointer foreground colour; resource \fBpointerColor\fR.
.IP "\fB\-pr2\fR \fIcolour\fR" 4
.IX Item "-pr2 colour"
The mouse pointer background colour; resource \fBpointerColor2\fR.
.IP "\fB\-bd\fR \fIcolour\fR" 4
.IX Item "-bd colour"
The colour of the border around the text area and between the scrollbar and the text;
resource \fBborderColor\fR.
.IP "\fB\-fn\fR \fIfontlist\fR" 4
.IX Item "-fn fontlist"
Select the fonts to be used. This is a comma separated list of font names
that are checked in order when trying to find glyphs for characters. The
first font defines the cell size for characters; other fonts might be
smaller, but not (in general) larger. A (hopefully) reasonable default
font list is always appended to it. See resource \fBfont\fR for more details.
.Sp
In short, to specify an X11 core font, just specify its name or prefix it
with \f(CW\*(C`x:\*(C'\fR. To specify an XFT-font, you need to prefix it with \f(CW\*(C`xft:\*(C'\fR,
e.g.:
.Sp
.Vb 2
\&   @@RXVT_NAME@@ \-fn "xft:Bitstream Vera Sans Mono:pixelsize=15"
\&   @@RXVT_NAME@@ \-fn "9x15bold,xft:Bitstream Vera Sans Mono"
.Ve
.Sp
See also the question \*(L"How does rxvt-unicode choose fonts?\*(R" in the \s-1FAQ\s0
section of @@RXVT_NAME@@(7).
.IP "\fB\-fb\fR \fIfontlist\fR" 4
.IX Item "-fb fontlist"
Compile \fIfont-styles\fR: The bold font list to use when \fBbold\fR characters
are to be printed. See resource \fBboldFont\fR for details.
.IP "\fB\-fi\fR \fIfontlist\fR" 4
.IX Item "-fi fontlist"
Compile \fIfont-styles\fR: The italic font list to use when \fIitalic\fR
characters are to be printed. See resource \fBitalicFont\fR for details.
.IP "\fB\-fbi\fR \fIfontlist\fR" 4
.IX Item "-fbi fontlist"
Compile \fIfont-styles\fR: The bold italic font list to use when \fB\f(BIbold
italic\fB\fR characters are to be printed. See resource \fBboldItalicFont\fR
for details.
.IP "\fB\-is\fR|\fB+is\fR" 4
.IX Item "-is|+is"
Compile \fIfont-styles\fR: Bold/Blink font styles imply high intensity
foreground/background (default). See resource \fBintensityStyles\fR for
details.
.IP "\fB\-name\fR \fIname\fR" 4
.IX Item "-name name"
Specify the application name under which resources are to be obtained,
rather than the default executable file name. Name should not contain
`.' or `*' characters. Also sets the icon and title name.
.IP "\fB\-ls\fR|\fB+ls\fR" 4
.IX Item "-ls|+ls"
Start as a login\-shell/sub\-shell; resource \fBloginShell\fR.
.IP "\fB\-mc\fR \fImilliseconds\fR" 4
.IX Item "-mc milliseconds"
Specify the maximum time between multi-click selections.
.IP "\fB\-ut\fR|\fB+ut\fR" 4
.IX Item "-ut|+ut"
Compile \fIutmp\fR: Inhibit/enable writing a utmp entry; resource
\&\fButmpInhibit\fR.
.IP "\fB\-vb\fR|\fB+vb\fR" 4
.IX Item "-vb|+vb"
Turn on/off visual bell on receipt of a bell character; resource
\&\fBvisualBell\fR.
.IP "\fB\-sb\fR|\fB+sb\fR" 4
.IX Item "-sb|+sb"
Turn on/off scrollbar; resource \fBscrollBar\fR.
.IP "\fB\-sr\fR|\fB+sr\fR" 4
.IX Item "-sr|+sr"
Put scrollbar on right/left; resource \fBscrollBar_right\fR.
.IP "\fB\-st\fR|\fB+st\fR" 4
.IX Item "-st|+st"
Display rxvt (non XTerm/NeXT) scrollbar without/with a trough;
resource \fBscrollBar_floating\fR.
.IP "\fB\-si\fR|\fB+si\fR" 4
.IX Item "-si|+si"
Turn on/off scroll-to-bottom on \s-1TTY\s0 output inhibit; resource
\&\fBscrollTtyOutput\fR has opposite effect.
.IP "\fB\-sk\fR|\fB+sk\fR" 4
.IX Item "-sk|+sk"
Turn on/off scroll-to-bottom on keypress; resource
\&\fBscrollTtyKeypress\fR.
.IP "\fB\-sw\fR|\fB+sw\fR" 4
.IX Item "-sw|+sw"
Turn on/off scrolling with the scrollback buffer as new lines appear.
This only takes effect if \fB\-si\fR is also given; resource
\&\fBscrollWithBuffer\fR.
.IP "\fB\-ptab\fR|\fB+ptab\fR" 4
.IX Item "-ptab|+ptab"
If enabled (default), \*(L"Horizontal Tab\*(R" characters are being stored as
actual wide characters in the screen buffer, which makes it possible to
select and paste them. Since a horizontal tab is a cursor movement and
not an actual glyph, this can sometimes be visually annoying as the cursor
on a tab character is displayed as a wide cursor; resource \fBpastableTabs\fR.
.IP "\fB\-bc\fR|\fB+bc\fR" 4
.IX Item "-bc|+bc"
Blink the cursor; resource \fBcursorBlink\fR.
.IP "\fB\-uc\fR|\fB+uc\fR" 4
.IX Item "-uc|+uc"
Make the cursor underlined; resource \fBcursorUnderline\fR.
.IP "\fB\-iconic\fR" 4
.IX Item "-iconic"
Start iconified, if the window manager supports that option.
Alternative form is \fB\-ic\fR.
.IP "\fB\-sl\fR \fInumber\fR" 4
.IX Item "-sl number"
Save \fInumber\fR lines in the scrollback buffer. See resource entry for
limits; resource \fBsaveLines\fR.
.IP "\fB\-b\fR \fInumber\fR" 4
.IX Item "-b number"
Compile \fIfrills\fR: Internal border of \fInumber\fR pixels. See resource
entry for limits; resource \fBinternalBorder\fR.
.IP "\fB\-w\fR \fInumber\fR" 4
.IX Item "-w number"
Compile \fIfrills\fR: External border of \fInumber\fR pixels. Also, \fB\-bw\fR
and \fB\-borderwidth\fR. See resource entry for limits; resource
\&\fBexternalBorder\fR.
.IP "\fB\-bl\fR" 4
.IX Item "-bl"
Compile \fIfrills\fR: Set \s-1MWM\s0 hints to request a borderless window, i.e.
if honoured by the \s-1WM,\s0 the rxvt-unicode window will not have window
decorations; resource \fBborderLess\fR. If the window manager does not
support \s-1MWM\s0 hints (e.g. kwin), enables override-redirect mode.
.IP "\fB\-override\-redirect\fR" 4
.IX Item "-override-redirect"
Compile \fIfrills\fR: Sets override-redirect on the window; resource
\&\fBoverride-redirect\fR.
.IP "\fB\-dockapp\fR" 4
.IX Item "-dockapp"
Sets the initial state of the window to WithdrawnState, which makes
window managers that support this extension treat it as a dockapp.
.IP "\fB\-sbg\fR" 4
.IX Item "-sbg"
Compile \fIfrills\fR: Disable the usage of the built-in block graphics/line
drawing characters and just rely on what the specified fonts provide. Use
this if you have a good font and want to use its block graphic glyphs;
resource \fBskipBuiltinGlyphs\fR.
.IP "\fB\-lsp\fR \fInumber\fR" 4
.IX Item "-lsp number"
Compile \fIfrills\fR: Lines (pixel height) to insert between each row of
the display. Useful to work around font rendering problems; resource
\&\fBlineSpace\fR.
.IP "\fB\-letsp\fR \fInumber\fR" 4
.IX Item "-letsp number"
Compile \fIfrills\fR: Amount to adjust the computed character width by
to control overall letter spacing. Negative values will tighten up the
letter spacing, positive values will space letters out more. Useful to
work around odd font metrics; resource \fBletterSpace\fR.
.IP "\fB\-tn\fR \fItermname\fR" 4
.IX Item "-tn termname"
This option specifies the name of the terminal type to be set in the
\&\fB\s-1TERM\s0\fR environment variable. This terminal type must exist in the
\&\fI\fItermcap\fI\|(5)\fR database and should have \fIli#\fR and \fIco#\fR entries;
resource \fBtermName\fR.
.IP "\fB\-e\fR \fIcommand [arguments]\fR" 4
.IX Item "-e command [arguments]"
Run the command with its command-line arguments in the \fB@@RXVT_NAME@@\fR
window; also sets the window title and icon name to be the basename of
the program being executed if neither \fI\-title\fR (\fI\-T\fR) nor \fI\-n\fR are
given on the command line. If this option is used, it must be the last
on the command-line. If there is no \fB\-e\fR option then the default is to
run the program specified by the \fB\s-1SHELL\s0\fR environment variable or,
failing that, \fI\fIsh\fI\|(1)\fR.
.Sp
Please note that you must specify a program with arguments. If you want to
run shell commands, you have to specify the shell, like this:
.Sp
.Vb 1
\&  @@RXVT_NAME@@ \-e sh \-c "shell commands"
.Ve
.IP "\fB\-title\fR \fItext\fR" 4
.IX Item "-title text"
Window title (\fB\-T\fR still respected); the default title is the basename
of the program specified after the \fB\-e\fR option, if any, otherwise the
application name; resource \fBtitle\fR.
.IP "\fB\-n\fR \fItext\fR" 4
.IX Item "-n text"
Icon name; the default name is the basename of the program specified
after the \fB\-e\fR option, if any, otherwise the application name;
resource \fBiconName\fR.
.IP "\fB\-C\fR" 4
.IX Item "-C"
Capture system console messages.
.IP "\fB\-pt\fR \fIstyle\fR" 4
.IX Item "-pt style"
Compile \fI\s-1XIM\s0\fR: input style for input method; \fBOverTheSpot\fR,
\&\fBOffTheSpot\fR, \fBRoot\fR; resource \fBpreeditType\fR.
.IP "\fB\-im\fR \fItext\fR" 4
.IX Item "-im text"
Compile \fI\s-1XIM\s0\fR: input method name. resource \fBinputMethod\fR.
.IP "\fB\-imlocale\fR \fIstring\fR" 4
.IX Item "-imlocale string"
The locale to use for opening the \s-1IM.\s0 You can use an \f(CW\*(C`LC_CTYPE\*(C'\fR of e.g.
\&\f(CW\*(C`de_DE.UTF\-8\*(C'\fR for normal text processing but \f(CW\*(C`ja_JP.EUC\-JP\*(C'\fR for the
input extension to be able to input japanese characters while staying in
another locale. resource \fBimLocale\fR.
.IP "\fB\-imfont\fR \fIfontset\fR" 4
.IX Item "-imfont fontset"
Set the font set to use for the X Input Method, see resource \fBimFont\fR
for more info.
.IP "\fB\-tcw\fR" 4
.IX Item "-tcw"
Change the meaning of triple-click selection with the left mouse
button. Only effective when the original (non-perl) selection code is
in-use. Instead of selecting a full line it will extend the selection to
the end of the logical line only. resource \fBtripleclickwords\fR.
.IP "\fB\-insecure\fR" 4
.IX Item "-insecure"
Enable \*(L"insecure\*(R" mode, which currently enables most of the escape
sequences that echo strings. See the resource \fBinsecure\fR for more
info.
.IP "\fB\-mod\fR \fImodifier\fR" 4
.IX Item "-mod modifier"
Override detection of Meta modifier with specified key: \fBalt\fR,
\&\fBmeta\fR, \fBhyper\fR, \fBsuper\fR, \fBmod1\fR, \fBmod2\fR, \fBmod3\fR, \fBmod4\fR,
\&\fBmod5\fR; resource \fImodifier\fR.
.IP "\fB\-ssc\fR|\fB+ssc\fR" 4
.IX Item "-ssc|+ssc"
Turn on/off secondary screen (default enabled); resource
\&\fBsecondaryScreen\fR.
.IP "\fB\-ssr\fR|\fB+ssr\fR" 4
.IX Item "-ssr|+ssr"
Turn on/off secondary screen scroll (default enabled); resource
\&\fBsecondaryScroll\fR.
.IP "\fB\-hold\fR|\fB+hold\fR" 4
.IX Item "-hold|+hold"
Turn on/off hold window after exit support. If enabled, @@RXVT_NAME@@
will not immediately destroy its window when the program executed within
it exits. Instead, it will wait till it is being killed or closed by the
user; resource \fBhold\fR.
.IP "\fB\-cd\fR \fIpath\fR" 4
.IX Item "-cd path"
Sets the working directory for the shell (or the command specified via
\&\fB\-e\fR). The \fIpath\fR must be an absolute path and it must exist for
@@RXVT_NAME@@ to start; resource \fBchdir\fR.
.IP "\fB\-xrm\fR \fIstring\fR" 4
.IX Item "-xrm string"
Works like the X Toolkit option of the same name, by adding the \fIstring\fR
as if it were specified in a resource file. Resource values specified this
way take precedence over all other resource specifications.
.Sp
Note that you need to use the \fIsame\fR syntax as in the .Xdefaults file,
e.g. \f(CW\*(C`*.background: black\*(C'\fR. Also note that all @@RXVT_NAME@@\-specific
options can be specified as long-options on the commandline, so use
of \fB\-xrm\fR is mostly limited to cases where you want to specify other
resources (e.g. for input methods) or for compatibility with other
programs.
.IP "\fB\-keysym.\fR\fIsym\fR \fIstring\fR" 4
.IX Item "-keysym.sym string"
Remap a key symbol. See resource \fBkeysym\fR.
.IP "\fB\-embed\fR \fIwindowid\fR" 4
.IX Item "-embed windowid"
Tells @@RXVT_NAME@@ to embed its windows into an already-existing window,
which enables applications to easily embed a terminal.
.Sp
Right now, @@RXVT_NAME@@ will first unmap/map the specified window, so it
shouldn't be a top-level window. @@RXVT_NAME@@ will also reconfigure it
quite a bit, so don't expect it to keep some specific state. It's best to
create an extra subwindow for @@RXVT_NAME@@ and leave it alone.
.Sp
The window will not be destroyed when @@RXVT_NAME@@ exits.
.Sp
It might be useful to know that @@RXVT_NAME@@ will not close file
descriptors passed to it (except for stdin/out/err, of course), so you
can use file descriptors to communicate with the programs within the
terminal. This works regardless of whether the \f(CW\*(C`\-embed\*(C'\fR option was used or
not.
.Sp
Here is a short Gtk2\-perl snippet that illustrates how this option can be
used (a longer example is in \fIdoc/embed\fR):
.Sp
.Vb 5
\&   my $rxvt = new Gtk2::Socket;
\&   $rxvt\->signal_connect_after (realize => sub {
\&      my $xid = $_[0]\->window\->get_xid;
\&      system "@@RXVT_NAME@@ \-embed $xid &";
\&   });
.Ve
.IP "\fB\-pty\-fd\fR \fIfile descriptor\fR" 4
.IX Item "-pty-fd file descriptor"
Tells @@RXVT_NAME@@ \s-1NOT\s0 to execute any commands or create a new pty/tty
pair but instead use the given file descriptor as the tty master. This is
useful if you want to drive @@RXVT_NAME@@ as a generic terminal emulator
without having to run a program within it.
.Sp
If this switch is given, @@RXVT_NAME@@ will not create any utmp/wtmp
entries and will not tinker with pty/tty permissions \- you have to do that
yourself if you want that.
.Sp
As an extremely special case, specifying \f(CW\*(C`\-1\*(C'\fR will completely suppress
pty/tty operations, which is probably only useful in conjunction with some
perl extension that manages the terminal.
.Sp
Here is a example in perl that illustrates how this option can be used (a
longer example is in \fIdoc/pty\-fd\fR):
.Sp
.Vb 2
\&   use IO::Pty;
\&   use Fcntl;
\&
\&   my $pty = new IO::Pty;
\&   fcntl $pty, F_SETFD, 0; # clear close\-on\-exec
\&   system "@@RXVT_NAME@@ \-pty\-fd " . (fileno $pty) . "&";
\&   close $pty;
\&
\&   # now communicate with rxvt
\&   my $slave = $pty\->slave;
\&   while (<$slave>) { print $slave "got <$_>\en" }
.Ve
.IP "\fB\-pe\fR \fIstring\fR" 4
.IX Item "-pe string"
Comma-separated list of perl extension scripts to use (or not to use) in
this terminal instance. See resource \fBperl-ext\fR for details.
.SH "RESOURCES"
.IX Header "RESOURCES"
Note: `@@RXVT_NAME@@ \-\-help' gives a list of all resources (long
options) compiled into your version. All resources are also available as
long-options.
.PP
You can set and change the resources using X11 tools like \fBxrdb\fR. Many
distribution do also load settings from the \fB~/.Xresources\fR file when X
starts. @@RXVT_NAME@@ will consult the following files/resources in order,
with later settings overwriting earlier ones:
.PP
.Vb 6
\&  1. app\-defaults file in $XAPPLRESDIR
\&  2. $HOME/.Xdefaults
\&  3. RESOURCE_MANAGER property on root\-window of screen 0
\&  4. SCREEN_RESOURCES property on root\-window of the current screen
\&  5. $XENVIRONMENT file OR $HOME/.Xdefaults\-<nodename>
\&  6. resources specified via \-xrm on the commandline
.Ve
.PP
Note that when reading X resources, \fB@@RXVT_NAME@@\fR recognizes two class
names: \fBRxvt\fR and \fBURxvt\fR. The class name \fBRxvt\fR allows resources
common to both \fB@@RXVT_NAME@@\fR and the original \fIrxvt\fR to be easily
configured, while the class name \fBURxvt\fR allows resources unique to
\&\fB@@RXVT_NAME@@\fR, to be shared between different \fB@@RXVT_NAME@@\fR
configurations. If no resources are specified, suitable defaults will
be used. Command-line arguments can be used to override resource
settings. The following resources are supported (you might want to
check the @@RXVT_NAME@@\fIperl\fR\|(3) manpage for additional settings by perl
extensions not documented here):
.IP "\fBdepth:\fR \fIbitdepth\fR" 4
.IX Item "depth: bitdepth"
Compile \fIxft\fR: Attempt to find a visual with the given bit depth;
option \fB\-depth\fR.
.IP "\fBbuffered:\fR \fIboolean\fR" 4
.IX Item "buffered: boolean"
Compile \fIxft\fR: Turn on/off double-buffering for xft (default enabled).
On some card/driver combination enabling it slightly decreases
performance, on most it greatly helps it. The slowdown is small, so it
should normally be enabled.
.IP "\fBgeometry:\fR \fIgeom\fR" 4
.IX Item "geometry: geom"
Create the window with the specified X window geometry [default 80x24];
option \fB\-geometry\fR.
.IP "\fBbackground:\fR \fIcolour\fR" 4
.IX Item "background: colour"
Use the specified colour as the window's background colour [default
White]; option \fB\-bg\fR.
.IP "\fBforeground:\fR \fIcolour\fR" 4
.IX Item "foreground: colour"
Use the specified colour as the window's foreground colour [default
Black]; option \fB\-fg\fR.
.IP "\fBcolor\fR\fIn\fR\fB:\fR \fIcolour\fR" 4
.IX Item "colorn: colour"
Use the specified colour for the colour value \fIn\fR, where 0\-7
corresponds to low-intensity (normal) colours and 8\-15 corresponds to
high-intensity (bold = bright foreground, blink = bright background)
colours. The canonical names are as follows: 0=black, 1=red, 2=green,
3=yellow, 4=blue, 5=magenta, 6=cyan, 7=white, but the actual colour
names used are listed in the \fB\s-1COLOURS AND GRAPHICS\s0\fR section.
.Sp
Colours higher than 15 cannot be set using resources (yet), but can be
changed using an escape command (see @@RXVT_NAME@@(7)).
.Sp
Colours 16\-79 form a standard 4x4x4 colour cube (the same as xterm with
88 colour support). Colours 80\-87 are evenly spaces grey steps.
.IP "\fBcolorBD:\fR \fIcolour\fR" 4
.IX Item "colorBD: colour"
.PD 0
.IP "\fBcolorIT:\fR \fIcolour\fR" 4
.IX Item "colorIT: colour"
.PD
Use the specified colour to display bold or italic characters when the
foreground colour is the default. If font styles are not available
(Compile \fIstyles\fR) and this option is unset, reverse video is used instead.
.IP "\fBcolorUL:\fR \fIcolour\fR" 4
.IX Item "colorUL: colour"
Use the specified colour to display underlined characters when the
foreground colour is the default.
.IP "\fBunderlineColor:\fR \fIcolour\fR" 4
.IX Item "underlineColor: colour"
If set, use the specified colour as the colour for the underline
itself. If unset, use the foreground colour.
.IP "\fBhighlightColor:\fR \fIcolour\fR" 4
.IX Item "highlightColor: colour"
If set, use the specified colour as the background for highlighted
characters. If unset, use reverse video.
.IP "\fBhighlightTextColor:\fR \fIcolour\fR" 4
.IX Item "highlightTextColor: colour"
If set and highlightColor is set, use the specified colour as the
foreground for highlighted characters.
.IP "\fBcursorColor:\fR \fIcolour\fR" 4
.IX Item "cursorColor: colour"
Use the specified colour for the cursor. The default is to use the
foreground colour; option \fB\-cr\fR.
.IP "\fBcursorColor2:\fR \fIcolour\fR" 4
.IX Item "cursorColor2: colour"
Use the specified colour for the colour of the cursor text. For this to
take effect, \fBcursorColor\fR must also be specified. The default is to
use the background colour.
.IP "\fBreverseVideo:\fR \fIboolean\fR" 4
.IX Item "reverseVideo: boolean"
\&\fBTrue\fR: simulate reverse video by foreground and background colours;
option \fB\-rv\fR. \fBFalse\fR: regular screen colours [default]; option
\&\fB+rv\fR. See note in \fB\s-1COLOURS AND GRAPHICS\s0\fR section.
.IP "\fBjumpScroll:\fR \fIboolean\fR" 4
.IX Item "jumpScroll: boolean"
\&\fBTrue\fR: specify that jump scrolling should be used. When receiving lots
of lines, @@RXVT_NAME@@ will only scroll once a whole screen height of lines
has been read, resulting in fewer updates while still displaying every
received line; option \fB\-j\fR.
.Sp
\&\fBFalse\fR: specify that smooth scrolling should be used. @@RXVT_NAME@@ will
force a screen refresh on each new line it received; option \fB+j\fR.
.IP "\fBskipScroll:\fR \fIboolean\fR" 4
.IX Item "skipScroll: boolean"
\&\fBTrue\fR: (the default) specify that skip scrolling should be used. When
receiving lots of lines, @@RXVT_NAME@@ will only scroll once in a while
(around 60 times per second), resulting in far fewer updates. This can
result in @@RXVT_NAME@@ not ever displaying some of the lines it receives;
option \fB\-ss\fR.
.Sp
\&\fBFalse\fR: specify that everything is to be displayed, even
if the refresh is too fast for the human eye to read anything (or the
monitor to display anything); option \fB+ss\fR.
.IP "\fBfading:\fR \fInumber\fR" 4
.IX Item "fading: number"
Fade the text by the given percentage when focus is lost; option \fB\-fade\fR.
.IP "\fBfadeColor:\fR \fIcolour\fR" 4
.IX Item "fadeColor: colour"
Fade to this colour, when fading is used (see \fBfading:\fR). The default
colour is black; option \fB\-fadecolor\fR.
.IP "\fBiconFile:\fR \fIfile\fR" 4
.IX Item "iconFile: file"
Set the application icon pixmap; option \fB\-icon\fR.
.IP "\fBscrollColor:\fR \fIcolour\fR" 4
.IX Item "scrollColor: colour"
Use the specified colour for the scrollbar [default #B2B2B2].
.IP "\fBtroughColor:\fR \fIcolour\fR" 4
.IX Item "troughColor: colour"
Use the specified colour for the scrollbar's trough area [default
#969696]. Only relevant for rxvt (non XTerm/NeXT) scrollbar.
.IP "\fBborderColor:\fR \fIcolour\fR" 4
.IX Item "borderColor: colour"
The colour of the border around the text area and between the scrollbar
and the text.
.IP "\fBfont:\fR \fIfontlist\fR" 4
.IX Item "font: fontlist"
Select the fonts to be used. This is a comma separated list of font names
that are checked in order when trying to find glyphs for characters. The
first font defines the cell size for characters; other fonts might be
smaller, but not (in general) larger. A (hopefully) reasonable default
font list is always appended to it; option \fB\-fn\fR.
.Sp
Each font can either be a standard X11 core font (\s-1XLFD\s0) name, with
optional prefix \f(CW\*(C`x:\*(C'\fR or a Xft font (Compile \fIxft\fR), prefixed with \f(CW\*(C`xft:\*(C'\fR.
.Sp
In addition, each font can be prefixed with additional hints and
specifications enclosed in square brackets (\f(CW\*(C`[]\*(C'\fR). The only available
hint currently is \f(CW\*(C`codeset=codeset\-name\*(C'\fR, and this is only used for Xft
fonts.
.Sp
For example, this font resource
.Sp
.Vb 5
\&   URxvt.font: 9x15bold,\e
\&               \-misc\-fixed\-bold\-r\-normal\-\-15\-140\-75\-75\-c\-90\-iso10646\-1,\e
\&               \-misc\-fixed\-medium\-r\-normal\-\-15\-140\-75\-75\-c\-90\-iso10646\-1, \e
\&               [codeset=JISX0208]xft:Kochi Gothic:antialias=false, \e
\&               xft:Code2000:antialias=false
.Ve
.Sp
specifies five fonts to be used. The first one is \f(CW\*(C`9x15bold\*(C'\fR (actually
the iso8859\-1 version of the second font), which is the base font (because
it is named first) and thus defines the character cell grid to be 9 pixels
wide and 15 pixels high.
.Sp
The second font is just used to add additional unicode characters not in
the base font, likewise the third, which is unfortunately non-bold, but
the bold version of the font does contain fewer characters, so this is a
useful supplement.
.Sp
The third font is an Xft font with aliasing turned off, and the characters
are limited to the \fB\s-1JIS 0208\s0\fR codeset (i.e. japanese kanji). The font
contains other characters, but we are not interested in them.
.Sp
The last font is a useful catch-all font that supplies most of the
remaining unicode characters.
.IP "\fBboldFont:\fR \fIfontlist\fR" 4
.IX Item "boldFont: fontlist"
.PD 0
.IP "\fBitalicFont:\fR \fIfontlist\fR" 4
.IX Item "italicFont: fontlist"
.IP "\fBboldItalicFont:\fR \fIfontlist\fR" 4
.IX Item "boldItalicFont: fontlist"
.PD
The font list to use for displaying \fBbold\fR, \fIitalic\fR or \fB\f(BIbold
italic\fB\fR characters, respectively.
.Sp
If specified and non-empty, then the syntax is the same as for the
\&\fBfont\fR\-resource, and the given font list will be used as is, which makes
it possible to substitute completely different font styles for bold and
italic.
.Sp
If unset (the default), a suitable font list will be synthesized by
\&\*(L"morphing\*(R" the normal text font list into the desired shape. If that is
not possible, replacement fonts of the desired shape will be tried.
.Sp
If set, but empty, then this specific style is disabled and the normal
text font will being used for the given style.
.IP "\fBintensityStyles:\fR \fIboolean\fR" 4
.IX Item "intensityStyles: boolean"
When font styles are not enabled, or this option is enabled (\fBTrue\fR,
option \fB\-is\fR, the default), bold/blink font styles imply high
intensity foreground/background colours. Disabling this option (\fBFalse\fR,
option \fB+is\fR) disables this behaviour, the high intensity colours are not
reachable.
.IP "\fBtitle:\fR \fIstring\fR" 4
.IX Item "title: string"
Set window title string, the default title is the command-line
specified after the \fB\-e\fR option, if any, otherwise the application
name; option \fB\-title\fR.
.IP "\fBiconName:\fR \fIstring\fR" 4
.IX Item "iconName: string"
Set the name used to label the window's icon or displayed in an icon
manager window, it also sets the window's title unless it is explicitly
set; option \fB\-n\fR.
.IP "\fBmapAlert:\fR \fIboolean\fR" 4
.IX Item "mapAlert: boolean"
\&\fBTrue\fR: de-iconify (map) on receipt of a bell character. \fBFalse\fR: no
de-iconify (map) on receipt of a bell character [default].
.IP "\fBurgentOnBell:\fR \fIboolean\fR" 4
.IX Item "urgentOnBell: boolean"
\&\fBTrue\fR: set the urgency hint for the wm on receipt of a bell character.
\&\fBFalse\fR: do not set the urgency hint [default].
.Sp
@@RXVT_NAME@@ resets the urgency hint on every focus change.
.IP "\fBvisualBell:\fR \fIboolean\fR" 4
.IX Item "visualBell: boolean"
\&\fBTrue\fR: use visual bell on receipt of a bell character; option \fB\-vb\fR.
\&\fBFalse\fR: no visual bell [default]; option \fB+vb\fR.
.IP "\fBloginShell:\fR \fIboolean\fR" 4
.IX Item "loginShell: boolean"
\&\fBTrue\fR: start as a login shell by prepending a `\-' to \fBargv[0]\fR of
the shell; option \fB\-ls\fR. \fBFalse\fR: start as a normal sub-shell
[default]; option \fB+ls\fR.
.IP "\fBmultiClickTime:\fR \fInumber\fR" 4
.IX Item "multiClickTime: number"
Specify the maximum time in milliseconds between multi-click select
events. The default is 500 milliseconds; option \fB\-mc\fR.
.IP "\fButmpInhibit:\fR \fIboolean\fR" 4
.IX Item "utmpInhibit: boolean"
\&\fBTrue\fR: inhibit writing record into the system log file \fButmp\fR;
option \fB\-ut\fR. \fBFalse\fR: write record into the system log file \fButmp\fR
[default]; option \fB+ut\fR.
.IP "\fBprint-pipe:\fR \fIstring\fR" 4
.IX Item "print-pipe: string"
Specify a command pipe for vt100 printer [default \fI\fIlpr\fI\|(1)\fR]. Use
\&\fBPrint\fR to initiate a screen dump to the printer and \fBCtrl-Print\fR or
\&\fBShift-Print\fR to include the scrollback as well.
.Sp
The string will be interpreted as if typed into the shell as-is.
.Sp
Example:
.Sp
.Vb 1
\&   URxvt.print\-pipe: cat > $(TMPDIR=$HOME mktemp urxvt.XXXXXX)
.Ve
.Sp
This creates a new file in your home directory with the screen contents
every time you hit \f(CW\*(C`Print\*(C'\fR.
.IP "\fBscrollstyle:\fR \fImode\fR" 4
.IX Item "scrollstyle: mode"
Set scrollbar style to \fBrxvt\fR, \fBplain\fR, \fBnext\fR or \fBxterm\fR. \fBplain\fR is
the author's favourite.
.IP "\fBthickness:\fR \fInumber\fR" 4
.IX Item "thickness: number"
Set the scrollbar width in pixels.
.IP "\fBscrollBar:\fR \fIboolean\fR" 4
.IX Item "scrollBar: boolean"
\&\fBTrue\fR: enable the scrollbar [default]; option \fB\-sb\fR. \fBFalse\fR:
disable the scrollbar; option \fB+sb\fR.
.IP "\fBscrollBar_right:\fR \fIboolean\fR" 4
.IX Item "scrollBar_right: boolean"
\&\fBTrue\fR: place the scrollbar on the right of the window; option \fB\-sr\fR.
\&\fBFalse\fR: place the scrollbar on the left of the window; option \fB+sr\fR.
.IP "\fBscrollBar_floating:\fR \fIboolean\fR" 4
.IX Item "scrollBar_floating: boolean"
\&\fBTrue\fR: display an rxvt scrollbar without a trough; option \fB\-st\fR.
\&\fBFalse\fR: display an rxvt scrollbar with a trough; option \fB+st\fR.
.IP "\fBscrollBar_align:\fR \fImode\fR" 4
.IX Item "scrollBar_align: mode"
Align the \fBtop\fR, \fBbottom\fR or \fBcentre\fR [default] of the scrollbar
thumb with the pointer on middle button press/drag.
.IP "\fBscrollTtyOutput:\fR \fIboolean\fR" 4
.IX Item "scrollTtyOutput: boolean"
\&\fBTrue\fR: scroll to bottom when tty receives output; option \fB\-si\fR.
\&\fBFalse\fR: do not scroll to bottom when tty receives output; option
\&\fB+si\fR.
.IP "\fBscrollWithBuffer:\fR \fIboolean\fR" 4
.IX Item "scrollWithBuffer: boolean"
\&\fBTrue\fR: scroll with scrollback buffer when tty receives new lines (i.e.
try to show the same lines) and \fBscrollTtyOutput\fR is False; option
\&\fB\-sw\fR. \fBFalse\fR: do not scroll with scrollback buffer when tty receives
new lines; option \fB+sw\fR.
.IP "\fBscrollTtyKeypress:\fR \fIboolean\fR" 4
.IX Item "scrollTtyKeypress: boolean"
\&\fBTrue\fR: scroll to bottom when a non-special key is pressed. Special keys
are those which are intercepted by rxvt-unicode for special handling and
are not passed onto the shell; option \fB\-sk\fR. \fBFalse\fR: do not scroll to
bottom when a non-special key is pressed; option \fB+sk\fR.
.IP "\fBsaveLines:\fR \fInumber\fR" 4
.IX Item "saveLines: number"
Save \fInumber\fR lines in the scrollback buffer [default 64]. This
resource is limited on most machines to 65535; option \fB\-sl\fR.
.IP "\fBinternalBorder:\fR \fInumber\fR" 4
.IX Item "internalBorder: number"
Internal border of \fInumber\fR pixels. This resource is limited to 100;
option \fB\-b\fR.
.IP "\fBexternalBorder:\fR \fInumber\fR" 4
.IX Item "externalBorder: number"
External border of \fInumber\fR pixels. This resource is limited to 100;
option \fB\-w\fR, \fB\-bw\fR, \fB\-borderwidth\fR.
.IP "\fBborderLess:\fR \fIboolean\fR" 4
.IX Item "borderLess: boolean"
Set \s-1MWM\s0 hints to request a borderless window, i.e. if honoured by the
\&\s-1WM,\s0 the rxvt-unicode window will not have window decorations; option \fB\-bl\fR.
.IP "\fBskipBuiltinGlyphs:\fR \fIboolean\fR" 4
.IX Item "skipBuiltinGlyphs: boolean"
Compile \fIfrills\fR: Disable the usage of the built-in block graphics/line
drawing characters and just rely on what the specified fonts provide. Use
this if you have a good font and want to use its block graphic glyphs;
option \fB\-sbg\fR.
.IP "\fBtermName:\fR \fItermname\fR" 4
.IX Item "termName: termname"
Specifies the terminal type name to be set in the \fB\s-1TERM\s0\fR environment
variable; option \fB\-tn\fR.
.IP "\fBlineSpace:\fR \fInumber\fR" 4
.IX Item "lineSpace: number"
Specifies number of lines (pixel height) to insert between each row of
the display [default 0]; option \fB\-lsp\fR.
.IP "\fBmeta8:\fR \fIboolean\fR" 4
.IX Item "meta8: boolean"
\&\fBTrue\fR: handle Meta (Alt) + keypress to set the 8th bit. \fBFalse\fR:
handle Meta (Alt) + keypress as an escape prefix [default].
.IP "\fBmouseWheelScrollPage:\fR \fIboolean\fR" 4
.IX Item "mouseWheelScrollPage: boolean"
\&\fBTrue\fR: the mouse wheel scrolls a page full. \fBFalse\fR: the mouse wheel
scrolls five lines [default].
.IP "\fBpastableTabs:\fR \fIboolean\fR" 4
.IX Item "pastableTabs: boolean"
\&\fBTrue\fR: store tabs as wide characters. \fBFalse\fR: interpret tabs as cursor
movement only; option \f(CW\*(C`\-ptab\*(C'\fR.
.IP "\fBcursorBlink:\fR \fIboolean\fR" 4
.IX Item "cursorBlink: boolean"
\&\fBTrue\fR: blink the cursor. \fBFalse\fR: do not blink the cursor [default];
option \fB\-bc\fR.
.IP "\fBcursorUnderline:\fR \fIboolean\fR" 4
.IX Item "cursorUnderline: boolean"
\&\fBTrue\fR: Make the cursor underlined. \fBFalse\fR: Make the cursor a box [default];
option \fB\-uc\fR.
.IP "\fBpointerBlank:\fR \fIboolean\fR" 4
.IX Item "pointerBlank: boolean"
\&\fBTrue\fR: blank the pointer when a key is pressed or after a set number
of seconds of inactivity. \fBFalse\fR: the pointer is always visible
[default].
.IP "\fBpointerColor:\fR \fIcolour\fR" 4
.IX Item "pointerColor: colour"
Mouse pointer foreground colour.
.IP "\fBpointerColor2:\fR \fIcolour\fR" 4
.IX Item "pointerColor2: colour"
Mouse pointer background colour.
.IP "\fBpointerBlankDelay:\fR \fInumber\fR" 4
.IX Item "pointerBlankDelay: number"
Specifies number of seconds before blanking the pointer [default 2]. Use a
large number (e.g. \f(CW987654321\fR) to effectively disable the timeout.
.IP "\fBbackspacekey:\fR \fIstring\fR" 4
.IX Item "backspacekey: string"
The string to send when the backspace key is pressed. If set to \fB\s-1DEC\s0\fR
or unset it will send \fBDelete\fR (code 127) or, with control, \fBBackspace\fR
(code 8) \- which can be reversed with the appropriate \s-1DEC\s0 private mode
escape sequence.
.IP "\fBdeletekey:\fR \fIstring\fR" 4
.IX Item "deletekey: string"
The string to send when the delete key (not the keypad delete key) is
pressed. If unset it will send the sequence traditionally associated
with the \fBExecute\fR key.
.IP "\fBcutchars:\fR \fIstring\fR" 4
.IX Item "cutchars: string"
The characters used as delimiters for double-click word selection
(whitespace delimiting is added automatically if resource is given).
.Sp
When the perl selection extension is in use (the default if compiled
in, see the @@RXVT_NAME@@\fIperl\fR\|(3) manpage), a suitable regex using these
characters will be created (if the resource exists, otherwise, no regex
will be created). In this mode, characters outside \s-1ISO\-8859\-1\s0 can be used.
.Sp
When the selection extension is not used, only \s-1ISO\-8859\-1\s0 characters can
be used. If not specified, the built-in default is used:
.Sp
\&\fB\s-1BACKSLASH\s0 `"'&()*,;<=>?@[]^{|}\fR
.IP "\fBpreeditType:\fR \fIstyle\fR" 4
.IX Item "preeditType: style"
\&\fBOverTheSpot\fR, \fBOffTheSpot\fR, \fBRoot\fR; option \fB\-pt\fR.
.IP "\fBinputMethod:\fR \fIname\fR" 4
.IX Item "inputMethod: name"
\&\fIname\fR of inputMethod to use; option \fB\-im\fR.
.IP "\fBimLocale:\fR \fIname\fR" 4
.IX Item "imLocale: name"
The locale to use for opening the \s-1IM.\s0 You can use an \f(CW\*(C`LC_CTYPE\*(C'\fR of e.g.
\&\f(CW\*(C`de_DE.UTF\-8\*(C'\fR for normal text processing but \f(CW\*(C`ja_JP.EUC\-JP\*(C'\fR for the
input extension to be able to input japanese characters while staying in
another locale; option \fB\-imlocale\fR.
.IP "\fBimFont:\fR \fIfontset\fR" 4
.IX Item "imFont: fontset"
Specify the font-set used for \s-1XIM\s0 styles \f(CW\*(C`OverTheSpot\*(C'\fR or
\&\f(CW\*(C`OffTheSpot\*(C'\fR. It must be a standard X font set (\s-1XLFD\s0 patterns separated
by commas), i.e. it's not in the same format as the other font lists used
in @@RXVT_NAME@@. The default will be set-up to chose *any* suitable found
found, preferably one or two pixels differing in size to the base font.
option \fB\-imfont\fR.
.IP "\fBtripleclickwords:\fR \fIboolean\fR" 4
.IX Item "tripleclickwords: boolean"
Change the meaning of triple-click selection with the left mouse
button. Instead of selecting a full line it will extend the selection to
the end of the logical line only; option \fB\-tcw\fR.
.IP "\fBinsecure:\fR \fIboolean\fR" 4
.IX Item "insecure: boolean"
Enables \*(L"insecure\*(R" mode. Rxvt-unicode offers some escape sequences that
echo arbitrary strings like the icon name or the locale. This could be
abused if somebody gets 8\-bit\-clean access to your display, whether
through a mail client displaying mail bodies unfiltered or through
\&\fIwrite\fR\|(1) or any other means. Therefore, these sequences are disabled by
default. (Note that many other terminals, including xterm, have these
sequences enabled by default, which doesn't make it safer, though).
.Sp
You can enable them by setting this boolean resource or specifying
\&\fB\-insecure\fR as an option. At the moment, this enables display-answer,
locale, findfont, icon label and window title requests.
.IP "\fBmodifier:\fR \fImodifier\fR" 4
.IX Item "modifier: modifier"
Set the key to be interpreted as the Meta key to: \fBalt\fR, \fBmeta\fR,
\&\fBhyper\fR, \fBsuper\fR, \fBmod1\fR, \fBmod2\fR, \fBmod3\fR, \fBmod4\fR, \fBmod5\fR; option
\&\fB\-mod\fR.
.IP "\fBanswerbackString:\fR \fIstring\fR" 4
.IX Item "answerbackString: string"
Specify the reply rxvt-unicode sends to the shell when an \s-1ENQ \s0(control-E)
character is passed through. It may contain escape values as described
in the entry on \fBkeysym\fR following.
.IP "\fBsecondaryScreen:\fR \fIboolean\fR" 4
.IX Item "secondaryScreen: boolean"
Turn on/off secondary screen (default enabled).
.IP "\fBsecondaryScroll:\fR \fIboolean\fR" 4
.IX Item "secondaryScroll: boolean"
Turn on/off secondary screen scroll (default enabled). If this
option is enabled, scrolls on the secondary screen will change the
scrollback buffer and, when secondaryScreen is off, switching
to/from the secondary screen will instead scroll the screen up.
.IP "\fBhold\fR: \fIboolean\fR" 4
.IX Item "hold: boolean"
Turn on/off hold window after exit support. If enabled, @@RXVT_NAME@@
will not immediately destroy its window when the program executed within
it exits. Instead, it will wait till it is being killed or closed by the
user.
.IP "\fBchdir\fR: \fIpath\fR" 4
.IX Item "chdir: path"
Sets the working directory for the shell (or the command specified via
\&\fB\-e\fR). The \fIpath\fR must be an absolute path and it must exist for
@@RXVT_NAME@@ to start. If it isn't specified then the current working
directory will be used; option \fB\-cd\fR.
.IP "\fBkeysym.\fR\fIsym\fR: \fIaction\fR" 4
.IX Item "keysym.sym: action"
Compile \fIfrills\fR: Associate \fIaction\fR with keysym \fIsym\fR. The intervening
resource name \fBkeysym.\fR cannot be omitted.
.Sp
Using this resource, you can map key combinations such as
\&\f(CW\*(C`Ctrl\-Shift\-BackSpace\*(C'\fR to various actions, such as outputting a different
string than would normally result from that combination, making the
terminal scroll up or down the way you want it, or any other thing an
extension might provide.
.Sp
The key combination that triggers the action, \fIsym\fR, has the following format:
.Sp
.Vb 1
\&   (modifiers\-)key
.Ve
.Sp
Where \fImodifiers\fR can be any combination of \fBISOLevel3\fR, \fBAppKeypad\fR,
\&\fBControl\fR, \fBNumLock\fR, \fBShift\fR, \fBMeta\fR, \fBLock\fR, \fBMod1\fR, \fBMod2\fR,
\&\fBMod3\fR, \fBMod4\fR, \fBMod5\fR, and the abbreviated \fBI\fR, \fBK\fR, \fBC\fR, \fBN\fR,
\&\fBS\fR, \fBM\fR, \fBA\fR, \fBL\fR, \fB1\fR, \fB2\fR, \fB3\fR, \fB4\fR, \fB5\fR.
.Sp
The \fBNumLock\fR, \fBMeta\fR and \fBISOLevel3\fR modifiers are usually aliased to
whatever modifier the NumLock key, Meta/Alt keys or \s-1ISO\s0 Level3 Shift/AltGr
keys are being mapped. \fBAppKeypad\fR is a synthetic modifier mapped to the
current application keymap mode state.
.Sp
Due the the large number of modifier combinations, a key mapping will
match if \fIat least\fR the specified identifiers are being set, and no other
key mappings with those and more bits are being defined. That means that
defining a mapping for \f(CW\*(C`a\*(C'\fR will automatically provide definitions for
\&\f(CW\*(C`Meta\-a\*(C'\fR, \f(CW\*(C`Shift\-a\*(C'\fR and so on, unless some of those are defined mappings
themselves. See the \f(CW\*(C`builtin:\*(C'\fR action, below, for a way to work around
this when this is a problem.
.Sp
The spelling of \fIkey\fR depends on your implementation of X. An easy way to
find a key name is to use the \fBxev\fR(1) command. You can find a list by
looking for the \f(CW\*(C`XK_\*(C'\fR macros in the \fBX11/keysymdef.h\fR include file (omit
the \f(CW\*(C`XK_\*(C'\fR prefix). Alternatively you can specify \fIkey\fR by its hex keysym
value (\fB0x0000 \- 0xFFFF\fR).
.Sp
As with any resource value, the \fIaction\fR string may contain backslash
escape sequences (\f(CW\*(C`\en\*(C'\fR: newline, \f(CW\*(C`\e\e\*(C'\fR: backslash, \f(CW\*(C`\e000\*(C'\fR: octal
number), see \s-1RESOURCES\s0 in \f(CW\*(C`man 7 X\*(C'\fR for further details.
.Sp
An action starts with an action prefix that selects a certain type
of action, followed by a colon. An action string without colons is
interpreted as a literal string to pass to the tty (as if it was
prefixed with \f(CW\*(C`string:\*(C'\fR).
.Sp
The following action prefixes are known \- extensions can provide
additional prefixes:
.RS 4
.IP "string:STRING" 4
.IX Item "string:STRING"
If the \fIaction\fR starts with \f(CW\*(C`string:\*(C'\fR (or otherwise contains no colons),
then the remaining \f(CW\*(C`STRING\*(C'\fR will be passed to the program running in the
terminal. For example, you could replace whatever Shift-Tab outputs by the
string \f(CW\*(C`echo rm \-rf /\*(C'\fR followed by a newline:
.Sp
.Vb 1
\&   URxvt.keysym.Shift\-Tab: string:echo rm \-rf /\en
.Ve
.Sp
This could in theory be used to completely redefine your keymap.
.Sp
In addition, for actions of this type, you can define a range of
keysyms in one shot by loading the \f(CW\*(C`keysym\-list\*(C'\fR perl extension and
providing an \fIaction\fR with pattern \fBlist/PREFIX/MIDDLE/SUFFIX\fR, where
the delimiter `/' should be a character not used by the strings.
.Sp
Its usage can be demonstrated by an example:
.Sp
.Vb 1
\&  URxvt.keysym.M\-C\-0x61:    list|\e033<|abc|>
.Ve
.Sp
The above line is equivalent to the following three lines:
.Sp
.Vb 3
\&  URxvt.keysym.Meta\-Control\-0x61:    string:\e033<a>
\&  URxvt.keysym.Meta\-Control\-0x62:    string:\e033<b>
\&  URxvt.keysym.Meta\-Control\-0x63:    string:\e033<c>
.Ve
.IP "command:STRING" 4
.IX Item "command:STRING"
If \fIaction\fR takes the form of \f(CW\*(C`command:STRING\*(C'\fR, the specified \fB\s-1STRING\s0\fR
is interpreted and executed as @@RXVT_NAME@@'s control sequence (basically
the opposite of \f(CW\*(C`string:\*(C'\fR \- instead of sending it to the program running
in the terminal, it will be treated as if it were program output). This is
most useful to feed command sequences into @@RXVT_NAME@@.
.Sp
For example the following means "change the current locale to \f(CW\*(C`zh_CN.GBK\*(C'\fR
when Control-Meta-c is being pressed":
.Sp
.Vb 1
\&  URxvt.keysym.M\-C\-c: command:\e033]701;zh_CN.GBK\e007
.Ve
.Sp
The following example will map Control\-Meta\-1 and Control\-Meta\-2 to
the fonts \f(CW\*(C`suxuseuro\*(C'\fR and \f(CW\*(C`9x15bold\*(C'\fR, so you can have some limited
font-switching at runtime:
.Sp
.Vb 2
\&  URxvt.keysym.M\-C\-1: command:\e033]50;suxuseuro\e007
\&  URxvt.keysym.M\-C\-2: command:\e033]50;9x15bold\e007
.Ve
.Sp
Other things are possible, e.g. resizing (see @@RXVT_NAME@@(7) for more
info):
.Sp
.Vb 2
\&  URxvt.keysym.M\-C\-3: command:\e033[8;25;80t
\&  URxvt.keysym.M\-C\-4: command:\e033[8;48;110t
.Ve
.IP "builtin:" 4
.IX Item "builtin:"
The builtin action is the action that @@RXVT_NAME@@ would execute if no
key binding existed for the key combination. The obvious use is to undo
the effect of existing bindings. The not so obvious use is to reinstate
bindings when another binding overrides too many modifiers.
.Sp
For example if you overwrite the \f(CW\*(C`Insert\*(C'\fR key you will disable
@@RXVT_NAME@@'s \f(CW\*(C`Shift\-Insert\*(C'\fR mapping. To re-enable that, you can poke
\&\*(L"holes\*(R" into the user-defined keymap using the \f(CW\*(C`builtin:\*(C'\fR replacement:
.Sp
.Vb 2
\&  URxvt.keysym.Insert: <my insert key sequence>
\&  URxvt.keysym.S\-Insert: builtin:
.Ve
.Sp
The first line defines a mapping for \f(CW\*(C`Insert\*(C'\fR and \fIany\fR combination
of modifiers. The second line re-establishes the default mapping for
\&\f(CW\*(C`Shift\-Insert\*(C'\fR.
.IP "builtin-string:" 4
.IX Item "builtin-string:"
This action is mainly useful to restore string mappings for keys that
have predefined actions in @@RXVT_NAME@@. The exact semantics are a bit
difficult to explain \- basically, this action will send the string to the
application that would be sent if @@RXVT_NAME@@ wouldn't have a built-in
action for it.
.Sp
An example might make it clearer: @@RXVT_NAME@@ normally pastes the
selection when you press \f(CW\*(C`Shift\-Insert\*(C'\fR. With the following bindings, it
would instead emit the (undocumented, but what applications running in the
terminal might expect) sequence \f(CW\*(C`ESC [ 2 $\*(C'\fR instead:
.Sp
.Vb 2
\&   URxvt.keysym.S\-Insert: builtin\-string:
\&   URxvt.keysym.C\-S\-Insert: builtin:
.Ve
.Sp
The first line disables the paste functionality for that key
combination, and the second reinstates the default behaviour for
\&\f(CW\*(C`Control\-Shift\-Insert\*(C'\fR, which would otherwise be overridden.
.Sp
Similarly, to let applications gain access to the \f(CW\*(C`C\-M\-c\*(C'\fR (copy to
clipboard) and \f(CW\*(C`C\-M\-v\*(C'\fR (paste clipboard) key combination, you can do
this:
.Sp
.Vb 2
\&   URxvt.keysym.C\-M\-c: builtin\-string:
\&   URxvt.keysym.C\-M\-v: builtin\-string:
.Ve
.IP "\s-1EXTENSION:STRING\s0" 4
.IX Item "EXTENSION:STRING"
An action of this form invokes the action \fB\s-1STRING\s0\fR, if any, provided
by the @@RXVT_NAME@@\fIperl\fR\|(3) extension \fB\s-1EXTENSION\s0\fR. The extension will
be loaded automatically if necessary.
.Sp
Not all extensions define actions, but popular extensions that do
include the \fIselection\fR and \fImatcher\fR extensions (documented in their
own manpages, @@RXVT_NAME@@\-\fIselection\fR\|(1) and @@RXVT_NAME@@\-\fImatcher\fR\|(1),
respectively).
.Sp
From the silly examples department, this will rot13\-\*(L"encrypt\*(R"
@@RXVT_NAME@@'s selection when Alt-Control-c is pressed on typical \s-1PC\s0
keyboards:
.Sp
.Vb 1
\&  URxvt.keysym.M\-C\-c: selection:rot13
.Ve
.IP "perl:STRING *DEPRECATED*" 4
.IX Item "perl:STRING *DEPRECATED*"
This is a deprecated way of invoking commands provided by perl
extensions. It is still supported, but should not be used anymore.
.RE
.RS 4
.RE
.IP "\fBperl-ext-common\fR: \fIstring\fR" 4
.IX Item "perl-ext-common: string"
.PD 0
.IP "\fBperl-ext\fR: \fIstring\fR" 4
.IX Item "perl-ext: string"
.PD
Comma-separated list(s) of perl extension scripts (default: \f(CW\*(C`default\*(C'\fR) to
use in this terminal instance; option \fB\-pe\fR.
.Sp
Extension names can be prefixed with a \f(CW\*(C`\-\*(C'\fR sign to prohibit using
them. This can be useful to selectively disable some extensions loaded
by default, or specified via the \f(CW\*(C`perl\-ext\-common\*(C'\fR resource. For
example, \f(CW\*(C`default,\-selection\*(C'\fR will use all the default extensions except
\&\f(CW\*(C`selection\*(C'\fR.
.Sp
The default set includes the \f(CW\*(C`selection\*(C'\fR, \f(CW\*(C`option\-popup\*(C'\fR,
\&\f(CW\*(C`selection\-popup\*(C'\fR, \f(CW\*(C`readline\*(C'\fR and \f(CW\*(C`searchable\-scrollback\*(C'\fR
extensions, and extensions which are mentioned in \fBkeysym\fR resources.
.Sp
Any extension such that a corresponding resource is given on the
command line is automatically appended to \fBperl-ext\fR.
.Sp
Each extension is looked up in the library directories, loaded if
necessary, and bound to the current terminal instance. When the library
search path contains multiple extension files of the same name, then the
first one found will be used.
.Sp
If both of these resources are the empty string, then the perl interpreter
will not be initialized. The rationale for having two options is that
\&\fBperl-ext-common\fR will be used for extensions that should be available to
all instances, while \fBperl-ext\fR is used for specific instances.
.IP "\fBperl-eval\fR: \fIstring\fR" 4
.IX Item "perl-eval: string"
Perl code to be evaluated when all extensions have been registered. See
the @@RXVT_NAME@@\fIperl\fR\|(3) manpage.
.IP "\fBperl-lib\fR: \fIpath\fR" 4
.IX Item "perl-lib: path"
Colon-separated list of additional directories that hold extension
scripts. When looking for perl extensions, @@RXVT_NAME@@ will first look
in these directories, then in \f(CW$URXVT_PERL_LIB\fR, \fI\f(CI$HOME\fI/.urxvt/ext\fR and
lastly in \fI@@RXVT_LIBDIR@@/urxvt/perl/\fR.
.Sp
See the @@RXVT_NAME@@\fIperl\fR\|(3) manpage.
.IP "\fBselection.pattern\-\f(BIidx\fB\fR: \fIperl-regex\fR" 4
.IX Item "selection.pattern-idx: perl-regex"
Additional selection patterns, see the @@RXVT_NAME@@\fIperl\fR\|(3) manpage for
details.
.IP "\fBselection-autotransform.\f(BIidx\fB\fR: \fIperl-transform\fR" 4
.IX Item "selection-autotransform.idx: perl-transform"
Selection auto-transform patterns, see the @@RXVT_NAME@@\fIperl\fR\|(3) manpage
for details.
.IP "\fBsearchable-scrollback:\fR \fIkeysym\fR *DEPRECATED*" 4
.IX Item "searchable-scrollback: keysym *DEPRECATED*"
This resource is deprecated and will be removed. Use a \fBkeysym\fR resource
instead, e.g.:
.Sp
.Vb 1
\&   URxvt.keysym.M\-s: searchable\-scrollback:start
.Ve
.IP "\fBurl-launcher\fR: \fIstring\fR" 4
.IX Item "url-launcher: string"
Specifies the program to be started with a \s-1URL\s0 argument. Used by the
\&\f(CW\*(C`selection\-popup\*(C'\fR and \f(CW\*(C`matcher\*(C'\fR perl extensions.
.IP "\fBtransient-for\fR: \fIwindowid\fR" 4
.IX Item "transient-for: windowid"
Compile \fIfrills\fR: Sets the \s-1WM_TRANSIENT_FOR\s0 property to the given window id.
.IP "\fBoverride-redirect\fR: \fIboolean\fR" 4
.IX Item "override-redirect: boolean"
Compile \fIfrills\fR: Sets override-redirect for the terminal window, making
it almost invisible to window managers; option \fB\-override\-redirect\fR.
.IP "\fBiso14755:\fR \fIboolean\fR" 4
.IX Item "iso14755: boolean"
Turn on/off \s-1ISO 14755 \s0(default enabled).
.IP "\fBiso14755_52:\fR \fIboolean\fR" 4
.IX Item "iso14755_52: boolean"
Turn on/off \s-1ISO 14755 5.2\s0 mode (default enabled).
.SH "BACKGROUND IMAGE OPTIONS AND RESOURCES"
.IX Header "BACKGROUND IMAGE OPTIONS AND RESOURCES"
.IP "\fB\-pixmap\fR \fIfile[;oplist]\fR" 4
.IX Item "-pixmap file[;oplist]"
.PD 0
.IP "\fBbackgroundPixmap:\fR \fIfile[;oplist]\fR" 4
.IX Item "backgroundPixmap: file[;oplist]"
.PD
Compile \fIpixbuf\fR: Use the specified image file as the window's
background and also optionally specify a colon separated list of
operations to modify it. Note that you may need to quote the \f(CW\*(C`;\*(C'\fR
character when using the command line option, as \f(CW\*(C`;\*(C'\fR is usually a
metacharacter in shells. Supported operations are:
.RS 4
.IP "\fBWxH+X+Y\fR" 4
.IX Item "WxH+X+Y"
sets scale and position. \fB\*(L"W\*(R" / \*(L"H\*(R"\fR specify the horizontal/vertical
scale (percent), and \fB\*(L"X\*(R" / \*(L"Y\*(R"\fR locate the image centre (percent). A
scale of 0 disables scaling.
.IP "\fBop=tile\fR" 4
.IX Item "op=tile"
enables tiling
.IP "\fBop=keep\-aspect\fR" 4
.IX Item "op=keep-aspect"
maintain the image aspect ratio when scaling
.IP "\fBop=root\-align\fR" 4
.IX Item "op=root-align"
use the position of the terminal window relative to the root window as
the image offset, simulating a root window background
.RE
.RS 4
.Sp
The default scale and position setting is \f(CW\*(C`100x100+50+50\*(C'\fR.
Alternatively, a predefined set of templates can be used to achieve
the most common setups:
.IP "\fBstyle=tiled\fR" 4
.IX Item "style=tiled"
the image is tiled with no scaling. Equivalent to 0x0+0+0:op=tile
.IP "\fBstyle=aspect\-stretched\fR" 4
.IX Item "style=aspect-stretched"
the image is scaled to fill the whole window maintaining the aspect
ratio and centered. Equivalent to 100x100+50+50:op=keep\-aspect
.IP "\fBstyle=stretched\fR" 4
.IX Item "style=stretched"
the image is scaled to fill the whole window. Equivalent to 100x100
.IP "\fBstyle=centered\fR" 4
.IX Item "style=centered"
the image is centered with no scaling. Equivalent to 0x0+50+50
.IP "\fBstyle=root\-tiled\fR" 4
.IX Item "style=root-tiled"
the image is tiled with no scaling and using 'root' positioning.
Equivalent to 0x0:op=tile:op=root\-align
.RE
.RS 4
.Sp
If multiple templates are specified the last one wins. Note that a
template overrides all the scale, position and operations settings.
.Sp
If used in conjunction with pseudo-transparency, the specified pixmap
will be blended over the transparent background using alpha-blending.
.RE
.IP "\fB\-tr\fR|\fB+tr\fR" 4
.IX Item "-tr|+tr"
.PD 0
.IP "\fBtransparent:\fR \fIboolean\fR" 4
.IX Item "transparent: boolean"
.PD
Turn on/off pseudo-transparency by using the root pixmap as background.
.Sp
\&\fB\-ip\fR (\fBinheritPixmap\fR) is still accepted as an obsolete alias but
will be removed in future versions.
.IP "\fB\-tint\fR \fIcolour\fR" 4
.IX Item "-tint colour"
.PD 0
.IP "\fBtintColor:\fR \fIcolour\fR" 4
.IX Item "tintColor: colour"
.PD
Tint the transparent background with the given colour. Note that a
black tint yields a completely black image while a white tint yields
the image unchanged.
.IP "\fB\-sh\fR \fInumber\fR" 4
.IX Item "-sh number"
.PD 0
.IP "\fBshading:\fR \fInumber\fR" 4
.IX Item "shading: number"
.PD
Darken (0 .. 99) or lighten (101 .. 200) the transparent background.
A value of 100 means no shading.
.IP "\fB\-blr\fR \fIHxV\fR" 4
.IX Item "-blr HxV"
.PD 0
.IP "\fBblurRadius:\fR \fIHxV\fR" 4
.IX Item "blurRadius: HxV"
.PD
Apply gaussian blur with the specified radius to the transparent
background. If a single number is specified, the vertical and
horizontal radii are considered to be the same. Setting one of the
radii to 1 and the other to a large number creates interesting effects
on some backgrounds. The maximum radius value is 128. An horizontal or
vertical radius of 0 disables blurring.
.IP "\fBpath:\fR \fIpath\fR" 4
.IX Item "path: path"
Specify the colon-delimited search path for finding background image files.
.SH "THE SCROLLBAR"
.IX Header "THE SCROLLBAR"
Lines of text that scroll off the top of the \fB@@RXVT_NAME@@\fR window
(resource: \fBsaveLines\fR) and can be scrolled back using the scrollbar
or by keystrokes. The normal \fB@@RXVT_NAME@@\fR scrollbar has arrows and
its behaviour is fairly intuitive. The \fBxterm-scrollbar\fR is without
arrows and its behaviour mimics that of \fIxterm\fR
.PP
Scroll down with \fBButton1\fR (\fBxterm-scrollbar\fR) or \fBShift-Next\fR.
Scroll up with \fBButton3\fR (\fBxterm-scrollbar\fR) or \fBShift-Prior\fR.
Continuous scroll with \fBButton2\fR.
.SH "MOUSE REPORTING"
.IX Header "MOUSE REPORTING"
To temporarily override mouse reporting, for either the scrollbar or
the normal text selection/insertion, hold either the Shift or the Meta
(Alt) key while performing the desired mouse action.
.PP
If mouse reporting mode is active, the normal scrollbar actions are
disabled \*(-- on the assumption that we are using a fullscreen
application. Instead, pressing Button1 and Button3 sends \fB\s-1ESC\s0 [ 6 ~\fR
(Next) and \fB\s-1ESC\s0 [ 5 ~\fR (Prior), respectively. Similarly, clicking on the
up and down arrows sends \fB\s-1ESC\s0 [ A\fR (Up) and \fB\s-1ESC\s0 [ B\fR (Down),
respectively.
.SH "THE SELECTION: SELECTING AND PASTING TEXT"
.IX Header "THE SELECTION: SELECTING AND PASTING TEXT"
The behaviour of text selection and insertion/pasting mechanism is similar
to \fIxterm\fR(1).
.IP "\fBSelecting\fR:" 4
.IX Item "Selecting:"
Left click at the beginning of the region, drag to the end of the region
and release; Right click to extend the marked region; Left double-click
to select a word; Left triple-click to select the entire logical line
(which can span multiple screen lines), unless modified by resource
\&\fBtripleclickwords\fR.
.Sp
Starting a selection while pressing the \fBMeta\fR key (or \fBMeta+Ctrl\fR keys)
(Compile: \fIfrills\fR) will create a rectangular selection instead of a
normal one. In this mode, every selected row becomes its own line in the
selection, and trailing whitespace is visually underlined and removed from
the selection.
.IP "\fBPasting\fR:" 4
.IX Item "Pasting:"
Pressing and releasing the Middle mouse button in an \fB@@RXVT_NAME@@\fR
window causes the value of the \s-1PRIMARY\s0 selection (or \s-1CLIPBOARD\s0 with the
\&\fBMeta\fR modifier) to be inserted as if it had been typed on the keyboard.
.Sp
Pressing \fBShift-Insert\fR causes the value of the \s-1PRIMARY\s0 selection to be
inserted too.
.Sp
rxvt-unicode also provides the bindings \fBCtrl-Meta-c\fR and
<Ctrl\-Meta\-v> to interact with the \s-1CLIPBOARD\s0 selection. The first
binding causes the value of the internal selection to be copied to the
\&\s-1CLIPBOARD\s0 selection, while the second binding causes the value of the
\&\s-1CLIPBOARD\s0 selection to be inserted.
.SH "CHANGING FONTS"
.IX Header "CHANGING FONTS"
Changing fonts (or font sizes, respectively) via the keypad is not yet
supported in rxvt-unicode. Bug me if you need this.
.PP
You can, however, switch fonts at runtime using escape sequences, e.g.:
.PP
.Vb 1
\&   printf \*(Aq\ee]710;%s\e007\*(Aq "9x15bold,xft:Kochi Gothic"
.Ve
.PP
You can use keyboard shortcuts, too:
.PP
.Vb 2
\&   URxvt.keysym.M\-C\-1: command:\e033]710;suxuseuro\e007\e033]711;suxuseuro\e007
\&   URxvt.keysym.M\-C\-2: command:\e033]710;9x15bold\e007\e033]711;9x15bold\e007
.Ve
.PP
rxvt-unicode will automatically re-apply these fonts to the output so far.
.SH "ISO 14755 SUPPORT"
.IX Header "ISO 14755 SUPPORT"
\&\s-1ISO 14755\s0 is a standard for entering and viewing unicode characters
and character codes using the keyboard. It consists of 4 parts. The
first part is available if rxvt-unicode has been compiled with
\&\f(CW\*(C`\-\-enable\-frills\*(C'\fR, the rest is available when rxvt-unicode was compiled
with \f(CW\*(C`\-\-enable\-iso14755\*(C'\fR.
.IP "\(bu" 4
5.1: Basic method
.Sp
This allows you to enter unicode characters using their hexcode.
.Sp
Start by pressing and holding both \f(CW\*(C`Control\*(C'\fR and \f(CW\*(C`Shift\*(C'\fR, then enter
hex-digits (between one and six). Releasing \f(CW\*(C`Control\*(C'\fR and \f(CW\*(C`Shift\*(C'\fR will
commit the character as if it were typed directly. While holding down
\&\f(CW\*(C`Control\*(C'\fR and \f(CW\*(C`Shift\*(C'\fR you can also enter multiple characters by pressing
\&\f(CW\*(C`Space\*(C'\fR, which will commit the current character and lets you start a new
one.
.Sp
As an example of use, imagine a business card with a japanese e\-mail
address, which you cannot type. Fortunately, the card has the e\-mail
address printed as hexcodes, e.g. \f(CW\*(C`671d 65e5\*(C'\fR. You can enter this easily
by pressing \f(CW\*(C`Control\*(C'\fR and \f(CW\*(C`Shift\*(C'\fR, followed by \f(CW\*(C`6\-7\-1\-D\-SPACE\-6\-5\-E\-5\*(C'\fR,
followed by releasing the modifier keys.
.IP "\(bu" 4
5.2: Keyboard symbols entry method
.Sp
This mode lets you input characters representing the keycap symbols of
your keyboard, if representable in the current locale encoding.
.Sp
Start by pressing \f(CW\*(C`Control\*(C'\fR and \f(CW\*(C`Shift\*(C'\fR together, then releasing
them. The next special key (cursor keys, home etc.) you enter will not
invoke its usual function but instead will insert the corresponding
keycap symbol. The symbol will only be entered when the key has been
released, otherwise pressing e.g. \f(CW\*(C`Shift\*(C'\fR would enter the symbol for
\&\f(CW\*(C`ISO Level 2 Switch\*(C'\fR, although your intention might have been to enter a
reverse tab (Shift-Tab).
.IP "\(bu" 4
5.3: Screen-selection entry method
.Sp
While this is implemented already (it's basically the selection
mechanism), it could be extended by displaying a unicode character map.
.IP "\(bu" 4
5.4: Feedback method for identifying displayed characters for later input
.Sp
This method lets you display the unicode character code associated with
characters already displayed.
.Sp
You enter this mode by holding down \f(CW\*(C`Control\*(C'\fR and \f(CW\*(C`Shift\*(C'\fR together, then
pressing and holding the left mouse button and moving around. The unicode
hex code(s) (it might be a combining character) of the character under the
pointer is displayed until you release \f(CW\*(C`Control\*(C'\fR and \f(CW\*(C`Shift\*(C'\fR.
.Sp
In addition to the hex codes it will display the font used to draw this
character \- due to implementation reasons, characters combined with
combining characters, line drawing characters and unknown characters will
always be drawn using the built-in support font.
.PP
With respect to conformance, rxvt-unicode is supposed to be compliant to
both scenario A and B of \s-1ISO 14755,\s0 including part 5.2.
.SH "LOGIN STAMP"
.IX Header "LOGIN STAMP"
\&\fB@@RXVT_NAME@@\fR tries to write an entry into the \fIutmp\fR(5) file so that
it can be seen via the \fI\fIwho\fI\|(1)\fR command, and can accept messages.  To
allow this feature, \fB@@RXVT_NAME@@\fR may need to be installed setuid root
on some systems or setgid to root or to some other group on others.
.SH "COLOURS AND GRAPHICS"
.IX Header "COLOURS AND GRAPHICS"
In addition to the default foreground and background colours,
\&\fB@@RXVT_NAME@@\fR can display up to 88/256 colours: 8 \s-1ANSI\s0 colours plus
high-intensity (potentially bold/blink) versions of the same, and 72 (or
240 in 256 colour mode) colours arranged in an 4x4x4 (or 6x6x6) colour \s-1RGB\s0
cube plus a 8 (24) colour greyscale ramp.
.PP
Here is a list of the \s-1ANSI\s0 colours with their names.
.TS
l l l .
color0	(black)	= Black
color1	(red)	= Red3
color2	(green)	= Green3
color3	(yellow)	= Yellow3
color4	(blue)	= Blue3
color5	(magenta)	= Magenta3
color6	(cyan)	= Cyan3
color7	(white)	= AntiqueWhite
color8	(bright black)	= Grey25
color9	(bright red)	= Red
color10	(bright green)	= Green
color11	(bright yellow)	= Yellow
color12	(bright blue)	= Blue
color13	(bright magenta)	= Magenta
color14	(bright cyan)	= Cyan
color15	(bright white)	= White
foreground		= Black
background		= White
.TE
.PP
It is also possible to specify the colour values of \fBforeground\fR,
\&\fBbackground\fR, \fBcursorColor\fR, \fBcursorColor2\fR, \fBcolorBD\fR, \fBcolorUL\fR as
a number 0\-15, as a convenient shorthand to reference the colour name of
color0\-color15.
.PP
The following text gives values for the standard 88 colour mode (and
values for the 256 colour mode in parentheses).
.PP
The \s-1RGB\s0 cube uses indices 16..79 (16..231) using the following formulas:
.PP
.Vb 2
\&   index_88  = (r * 4 + g) * 4 + b + 16   # r, g, b = 0..3
\&   index_256 = (r * 6 + g) * 6 + b + 16   # r, g, b = 0..5
.Ve
.PP
The grayscale ramp uses indices 80..87 (232..239), from 10% to 90% in 10%
steps (1/26 to 25/26 in 1/26 steps) \- black and white are already part of
the \s-1RGB\s0 cube.
.PP
Together, all those colours implement the 88 (256) colour xterm
colours. Only the first 16 can be changed using resources currently, the
rest can only be changed via command sequences (\*(L"escape codes\*(R").
.PP
Applications are advised to use terminfo or command sequences to discover
number and \s-1RGB\s0 values of all colours (yes, you can query this...).
.PP
Note that \fB\-rv\fR (\fB\*(L"reverseVideo: True\*(R"\fR) simulates reverse video by
always swapping the foreground/background colours. This is in contrast to
\&\fIxterm\fR(1) where the colours are only swapped if they have not otherwise
been specified. For example,
.PP
.Vb 1
\&   @@RXVT_NAME@@ \-fg Black \-bg White \-rv
.Ve
.PP
would yield White on Black, while on \fIxterm\fR(1) it would yield Black on
White.
.SS "\s-1ALPHA CHANNEL SUPPORT\s0"
.IX Subsection "ALPHA CHANNEL SUPPORT"
If Xft support has been compiled in and as long as Xft/Xrender/X don't get
their act together, rxvt-unicode will do its own alpha channel management:
.PP
You can prefix any colour with an opaqueness percentage enclosed in
brackets, i.e. \f(CW\*(C`[percent]\*(C'\fR, where \f(CW\*(C`percent\*(C'\fR is a decimal percentage
(0\-100) that specifies the opacity of the colour, where \f(CW0\fR is completely
transparent and \f(CW100\fR is completely opaque. For example, \f(CW\*(C`[50]red\*(C'\fR is a
half-transparent red, while \f(CW\*(C`[95]#00ff00\*(C'\fR is an almost opaque green. This
is the recommended format to specify transparency values, and works with
all ways to specify a colour.
.PP
For complete control, rxvt-unicode also supports
\&\f(CW\*(C`rgba:rrrr/gggg/bbbb/aaaa\*(C'\fR (exactly four hex digits/component) colour
specifications, where the additional \f(CW\*(C`aaaa\*(C'\fR component specifies opacity
(alpha) values. The minimum value of \f(CW0000\fR is completely transparent,
while \f(CW\*(C`ffff\*(C'\fR is completely opaque). The two example colours from
earlier could also be specified as \f(CW\*(C`rgba:ff00/0000/0000/8000\*(C'\fR and
\&\f(CW\*(C`rgba:0000/ff00/0000/f332\*(C'\fR.
.PP
You probably need to specify \fB\*(L"\-depth 32\*(R"\fR, too, to force a visual with
alpha channels, and have the luck that your X\-server uses \s-1ARGB\s0 pixel
layout, as X is far from just supporting \s-1ARGB\s0 visuals out of the box, and
rxvt-unicode just fudges around.
.PP
For example, the following selects an almost completely transparent black
background, and an almost opaque pink foreground:
.PP
.Vb 1
\&   @@RXVT_NAME@@ \-depth 32 \-bg rgba:0000/0000/0000/4444 \-fg "[80]pink"
.Ve
.PP
When not using a background image, then the interpretation of the
alpha channel is up to your compositing manager (most interpret it as
transparency of course).
.PP
When using a background pixmap or pseudo-transparency, then the background
colour will always behave as if it were completely transparent (so the
background image shows instead), regardless of how it was specified, while
other colours will either be transparent as specified (the background
image will show through) on servers supporting the \s-1RENDER\s0 extension, or
fully opaque on servers not supporting the \s-1RENDER EXTENSION.\s0
.PP
Please note that due to bugs in Xft, specifying alpha values might result
in garbage being displayed when the X\-server does not support the \s-1RENDER\s0
extension.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
\&\fB@@RXVT_NAME@@\fR sets and/or uses the following environment variables:
.IP "\fB\s-1TERM\s0\fR" 4
.IX Item "TERM"
Normally set to \f(CW\*(C`rxvt\-unicode\*(C'\fR, unless overwritten at configure time, via
resources or on the command line.
.IP "\fB\s-1COLORTERM\s0\fR" 4
.IX Item "COLORTERM"
Either \f(CW\*(C`rxvt\*(C'\fR, \f(CW\*(C`rxvt\-xpm\*(C'\fR, depending on whether @@RXVT_NAME@@ was
compiled with background image support, and optionally with the added
extension \f(CW\*(C`\-mono\*(C'\fR to indicate that rxvt-unicode runs on a monochrome
screen.
.IP "\fB\s-1COLORFGBG\s0\fR" 4
.IX Item "COLORFGBG"
Set to a string of the form \f(CW\*(C`fg;bg\*(C'\fR or \f(CW\*(C`fg;xpm;bg\*(C'\fR, where \f(CW\*(C`fg\*(C'\fR is
the colour code used as default foreground/text colour (or the string
\&\f(CW\*(C`default\*(C'\fR to indicate that the default-colour escape sequence is to be
used), \f(CW\*(C`bg\*(C'\fR is the colour code used as default background colour (or the
string \f(CW\*(C`default\*(C'\fR), and \f(CW\*(C`xpm\*(C'\fR is the string \f(CW\*(C`default\*(C'\fR if @@RXVT_NAME@@
was compiled with background image support. Libraries like \f(CW\*(C`ncurses\*(C'\fR
and \f(CW\*(C`slang\*(C'\fR can (and do) use this information to optimize screen output.
.IP "\fB\s-1WINDOWID\s0\fR" 4
.IX Item "WINDOWID"
Set to the (decimal) X Window \s-1ID\s0 of the @@RXVT_NAME@@ window (the toplevel
window, which usually has subwindows for the scrollbar, the terminal
window and so on).
.IP "\fB\s-1TERMINFO\s0\fR" 4
.IX Item "TERMINFO"
Set to the terminfo directory iff @@RXVT_NAME@@ was configured with
\&\f(CW\*(C`\-\-with\-terminfo=PATH\*(C'\fR.
.IP "\fB\s-1DISPLAY\s0\fR" 4
.IX Item "DISPLAY"
Used by @@RXVT_NAME@@ to connect to the display and set to the correct
display in its child processes if \f(CW\*(C`\-display\*(C'\fR isn't used to override. It
defaults to \f(CW\*(C`:0\*(C'\fR if it doesn't exist.
.IP "\fB\s-1SHELL\s0\fR" 4
.IX Item "SHELL"
The shell to be used for command execution, defaults to \f(CW\*(C`/bin/sh\*(C'\fR.
.IP "\fB\s-1RXVT_SOCKET\s0\fR [\fIsic\fR]" 4
.IX Item "RXVT_SOCKET [sic]"
The unix domain socket path used by @@RXVT_NAME@@c(1) and
@@RXVT_NAME@@d(1).
.Sp
Default \fI\f(CI$HOME\fI/.urxvt/urxvtd\-\fI<nodename>\fI\fR.
.IP "\fB\s-1URXVT_PERL_LIB\s0\fR" 4
.IX Item "URXVT_PERL_LIB"
Additional \fI:\fR\-separated library search path for perl extensions. Will be
searched after \fB\-perl\-lib\fR but before \fI~/.urxvt/ext\fR and the system library
directory.
.IP "\fB\s-1URXVT_PERL_VERBOSITY\s0\fR" 4
.IX Item "URXVT_PERL_VERBOSITY"
See @@RXVT_NAME@@perl(3).
.IP "\fB\s-1HOME\s0\fR" 4
.IX Item "HOME"
Used to locate the default directory for the unix domain socket for
daemon communications and to locate various resource files (such as
\&\f(CW\*(C`.Xdefaults\*(C'\fR)
.IP "\fB\s-1XAPPLRESDIR\s0\fR" 4
.IX Item "XAPPLRESDIR"
Directory where application-specific X resource files are located.
.IP "\fB\s-1XENVIRONMENT\s0\fR" 4
.IX Item "XENVIRONMENT"
If set and accessible, gives the name of a X resource file to be loaded by
@@RXVT_NAME@@.
.SH "FILES"
.IX Header "FILES"
.IP "\fB/usr/lib/X11/rgb.txt\fR" 4
.IX Item "/usr/lib/X11/rgb.txt"
Colour names.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
@@RXVT_NAME@@(7), @@RXVT_NAME@@c(1), @@RXVT_NAME@@d(1), @@RXVT_NAME@@\-\fIextensions\fR\|(1),
@@RXVT_NAME@@\fIperl\fR\|(3), \fIxterm\fR\|(1), \fIsh\fR\|(1), \fIresize\fR\|(1), X(1), \fIpty\fR\|(4), \fItty\fR\|(4), \fIutmp\fR\|(5)
.SH "CURRENT PROJECT COORDINATOR"
.IX Header "CURRENT PROJECT COORDINATOR"
.IP "Project Coordinator" 4
.IX Item "Project Coordinator"
Marc A. Lehmann <rxvt\-unicode@schmorp.de>.
.Sp
<http://software.schmorp.de/pkg/rxvt\-unicode.html>
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "John Bovey" 4
.IX Item "John Bovey"
University of Kent, 1992, wrote the original Xvt.
.IP "Rob Nation <nation@rocket.sanders.lockheed.com>" 4
.IX Item "Rob Nation <nation@rocket.sanders.lockheed.com>"
very heavily modified Xvt and came up with Rxvt
.IP "Angelo Haritsis <ah@doc.ic.ac.uk>" 4
.IX Item "Angelo Haritsis <ah@doc.ic.ac.uk>"
wrote the Greek Keyboard Input (no longer in code)
.IP "mj olesen <olesen@me.QueensU.CA>" 4
.IX Item "mj olesen <olesen@me.QueensU.CA>"
Wrote the menu system.
.Sp
Project Coordinator (changes.txt 2.11 to 2.21)
.IP "Oezguer Kesim <kesim@math.fu\-berlin.de>" 4
.IX Item "Oezguer Kesim <kesim@math.fu-berlin.de>"
Project Coordinator (changes.txt 2.21a to 2.4.5)
.IP "Geoff Wing <gcw@pobox.com>" 4
.IX Item "Geoff Wing <gcw@pobox.com>"
Rewrote screen display and text selection routines.
.Sp
Project Coordinator (changes.txt 2.4.6 \- rxvt-unicode)
.IP "Marc Alexander Lehmann <rxvt\-unicode@schmorp.de>" 4
.IX Item "Marc Alexander Lehmann <rxvt-unicode@schmorp.de>"
Forked rxvt-unicode, unicode support, rewrote almost all the code, perl
extension, random hacks, numerous bugfixes and extensions.
.Sp
Project Coordinator (Changes 1.0 \-)
.IP "Emanuele Giaquinta <emanuele.giaquinta@gmail.com>" 4
.IX Item "Emanuele Giaquinta <emanuele.giaquinta@gmail.com>"
pty/utmp code rewrite, image code improvements, many random hacks and bugfixes.
